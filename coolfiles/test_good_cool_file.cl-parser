(program (class class B { (attribute (attribute_without_semicolon (value s : (type Int)) <- (expr 10)) ;) (method g ( (parameters (attribute_without_semicolon (value y : (type String)))) ) : (type Int) { (expr (expr y) . concat ( (expr s) )) } ;) (method f ( (parameters (attribute_without_semicolon (value x : (type Int)))) ) : (type Int) { (expr (expr x) (ariphemitic_operation +) (expr 1)) } ;) } ;) (class class A inherits B { (attribute (attribute_without_semicolon (value a : (type Int))) ;) (attribute (attribute_without_semicolon (value b : (type B)) <- (expr (new new (type B)))) ;) (method f ( (parameters (attribute_without_semicolon (value x : (type Int)))) ) : (type Int) { (expr (expr x) (ariphemitic_operation +) (expr a)) } ;) } ;) (class class Main { (attribute (attribute_without_semicolon (value x : (type Bool))) ;) (attribute (attribute_without_semicolon (value y : (type String))) ;) (attribute (attribute_without_semicolon (value z : (type Int))) ;) (method main ( ) : (type Object) { (expr (assigment x <- (expr False) ;)) (expr (conditional if (expr ( (expr (expr x) (ariphemitic_operation =) (expr False)) )) then (expr (assigment y <- (expr "Hello world!") ;)) else (expr (assigment z <- (expr x) ;)) fI ;)) } ;) } ;) --Cool comment--)